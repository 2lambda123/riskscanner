<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="io.riskscanner.base.mapper.ext.ExtRuleGroupMapper">
    <resultMap id="BaseResultMap" type="io.riskscanner.dto.RuleGroupDTO"
               extends="io.riskscanner.base.mapper.RuleGroupMapper.BaseResultMap">
        <result column="pluginName" property="pluginName"/>
        <result column="pluginIcon" property="pluginIcon"/>
    </resultMap>

    <sql id="condition">
        <choose>
            <when test='${object}.operator == "like"'>
                like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "not like"'>
                not like CONCAT('%', #{${object}.value},'%')
            </when>
            <when test='${object}.operator == "in"'>
                in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "not in"'>
                not in
                <foreach collection="${object}.value" item="v" separator="," open="(" close=")">
                    #{v}
                </foreach>
            </when>
            <when test='${object}.operator == "between"'>
                between #{${object}.value[0]} and #{${object}.value[1]}
            </when>
            <when test='${object}.operator == "gt"'>
                &gt; #{${object}.value}
            </when>
            <when test='${object}.operator == "lt"'>
                &lt; #{${object}.value}
            </when>
            <when test='${object}.operator == "ge"'>
                &gt;= #{${object}.value}
            </when>
            <when test='${object}.operator == "le"'>
                &lt;= #{${object}.value}
            </when>
            <otherwise>
                = #{${object}.value}
            </otherwise>
        </choose>
    </sql>

    <sql id="combine">
        <if test='${condition}.name != null'>
            and t.name
            <include refid="condition">
                <property name="object" value="${condition}.name"/>
            </include>
        </if>
        <if test='${condition}.description != null'>
            and t.description
            <include refid="condition">
                <property name="object" value="${condition}.description"/>
            </include>
        </if>
        <if test='${condition}.pluginId != null'>
            and t.plugin_id
            <include refid="condition">
                <property name="object" value="${condition}.pluginId"/>
            </include>
        </if>
        <if test='${condition}.flag != null'>
            and t.flag
            <include refid="condition">
                <property name="object" value="${condition}.flag"/>
            </include>
        </if>
    </sql>

    <select id="list" resultMap="BaseResultMap">
        select
        t.*,
        t1.name as pluginName,
        t1.icon as pluginIcon
        from rule_group as t
        left join plugin t1 on t.plugin_id = t1.id
        <where>
            <if test="request.combine != null">
                <include refid="combine">
                    <property name="condition" value="request.combine"/>
                </include>
            </if>

            <if test="request.name != null and request.name != ''">
                and t.name like concat('%', #{request.name}, '%')
            </if>
        </where>
        order by t.id
    </select>

</mapper>